# Enable/Disable corpus import. If is set to false, a new corpus will be created.
loadCorpus=false
# Path to the to be loaded corpus (only relevant if an existing corpus will be loaded).
corpusPath=

# Enable/Disable corpus export (only relevant if a new corpus will be created).
# Corpus will be saved into the evaluation results folder.
saveCreatedCorpus=false

# Paths to the training and test corpora (only relevant if a new corpus will be created).
trainingDataPath=resources/corpora/trainEmoModCorpus.csv
testDataPath=resources/corpora/testEmoModCorpus.csv

# Path where the results will be saved (new subfolder will be created).
# Do not forget a slash (/) at the end of the path!
# Leave empty to save into project's root folder.
resultPath=

# Path to the stopwords file. Contained words will be ignored in the classification task.
stopWordsPath=resources/lexica/stopWords.txt

# Enable/Disable stemming (only relevant if a new corpus is created).
stemming=false

# Classifier type (1 = SVM; 2 = Word list).
classifierType=1

## Word list classification parameter (only relevant if word list classifier is selected).
# Path to the emotion lexicon.
emotionLexiconPath=resources/lexica/emotionLexicon.csv
# Enable/Disable weight matrices import. If is set to false, new weight matrices will be created using the training data. Weight matrices will be saved into the evaluation results folder.
loadWeightMatrices=true
# Path to the weight matrices (only relevant if existing weight matrices will be loaded).
weightMatricesPath=resources/weightMatricesAVG.txt
## Hill climbing paramter (only relevant if new weight matrices will be created).
# Stopping criteria (epsilonWL=0.01 --> the F1-score has to increase at least by 1%).
epsilonWL=0.0001
# Number of searches for local maxima with different start seeds. #searches matrices will be created and averaged to create the final weighting matrices.
searches=50
# Number of tries to search for a better matrix that satisfies the stopping criteria. If no better matrix after #tries tries is found, a new search attempt begins.
tries=50

## SVM classification parameter (only relevant if SVM classification is selected).
# Cost of constraint violation. If c=0, 10-fold-cross-validation will be used to find best c (can take up to several days to find, depending on training size).
c_EMO=0.3
# Stopping criteria. Should be low for final experiments.
epsilonSVM_EMO=1
# Choose what n-grams (word level) should be used as features.
# 1 = unigram; 2 = uni- and bigram; 3 = uni- bi- and trigram
n_gram=3

## Modifier detection configurations. This configurations are only relevant if a new corpus is created.
# Select modifier detection method.
# 0 = no modifier detection; 1 = modify next n words heuristic; 2 = NegEx(only negations); 3 = traversing dependency tree; 4 = SVM
modifierDetectionMethod=1
# Paths to the required modifier lexica.
negationLexiconPath=resources/lexica/negationLexicon.txt
intensifierLexiconPath=resources/lexica/intensifierLexicon.txt
diminisherLexiconPath=resources/lexica/diminisherLexicon.txt
# Modifier detection settings.
detectNegations=true
detectIntenisifer=true
detectDiminsiher=true
##Modifier detection with next-n heuristic - Settings.
# Choose how many tokens shall be modified after a modifier occurs.
n=2
## Modifier detection with SVM - Settings.
# Path to the individual training data for each SVM (only relevant if loadModels=false).
negTrainDataPath=resources/handAnnotations/handAnnotatedTweetsTrainNeg.csv
intTrainDataPath=resources/handAnnotations/handAnnotatedTweetsTrainInt.csv
dimTrainDataPath=resources/handAnnotations/handAnnotatedTweetsTrainDim.csv
# Cost of constraint violation. If c=0, 10-fold-cross-validation will be used to find best c.
c_MOD=0.125
# Stopping criteria. Should be low for final experiments.
epsilonSVM_MOD=5

## Modifier detection evaluation configurations. (only relevant if any modifier detection method is selected)
# Enable/Disable modifier evaluation .
evaluateModifierDetection=false
# Path to the hand annotations file. This file contains all hand annotations used for evaluation.
handAnnotationsPath=resources/handAnnotations/handAnnotatedTweetsTest.csv

# Path to the hand annotated Tweets corpus file. This file contains all Tweets for which hand annotations exist.
handAnnotationsEvalCorpusPath=resources/corpora/handAnnotationsCorpus.csv